<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans 
           https://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context 
           https://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/mvc 
           https://www.springframework.org/schema/mvc/spring-mvc.xsd
           http://www.springframework.org/schema/tx 
           https://www.springframework.org/schema/tx/spring-tx.xsd">
    <context:component-scan base-package="com.springMVCMaven"/>
     <context:annotation-config />
       <!-- <mvc:annotation-driven /> -->

        
        <!-- f annotation not needed then traditional way  <mvc:annotation-driven />-->

       <!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->  
      <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/springframework"/>
        <property name="user" value="root"/>
        <property name="password" value="roopa"/>
</bean>
    <!-- Hibernate SessionFactory configuration -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
       <!-- <property name="configLocation" value="classpath:hibernate.cfg.xml"/> -->
       <property name="packagesToScan" value="com.springMVCMaven.Model"></property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>

    <!-- Transaction Manager -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- Enable annotation-driven transaction management -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
<!--	<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>-->
	        <property name="prefix" value="/views/" />
        <property name="suffix" value=".jsp" />	</bean>
        
        <!-- You can also create persistence.xml file and add defaults there and add the persistenceuntil name here -->
        <!-- i both xml file persisteceuntl name should be included -->
            <!-- EntityManagerFactory bean -->
<!--     <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> -->
<!--         <property name="dataSource" ref="dataSource"/> -->
<!--  <property name="packagesToScan" value="com.springMVCMaven.Model"/> -->
<!--         <property name="persistenceUnitName" value="persistence-unit-name"/> -->
<!--         <property name="jpaVendorAdapter"> -->
<!--             <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/> -->
<!--         </property> -->
<!--         <property name="jpaProperties"> -->
<!--             <props> -->
<!--                 <prop key="hibernate.dialect">org.hibernate.dialect.MySQL8Dialect</prop> -->
<!--                 <prop key="hibernate.hbm2ddl.auto">update</prop> -->
<!--                 <prop key="hibernate.show_sql">true</prop> -->
<!--                 <prop key="hibernate.format_sql">true</prop> -->
<!--                 <prop key="hibernate.cache.use_second_level_cache">true</prop> -->
<!--                 <prop key="hibernate.cache.use_query_cache">true</prop> -->
<!--                 <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop> -->
<!--                 <prop key="hibernate.cache.provider_configuration_file_resource_path">classpath:ehcache.xml</prop> -->
<!--                 <prop key="hibernate.generate_statistics">true</prop> -->
<!--                 <prop key="hibernate.connection.pool_size">10</prop> -->
<!--                 <prop key="hibernate.jdbc.batch_size">50</prop> -->
<!--             </props> -->
<!--         </property> -->
<!--     </bean> -->

<!--     Transaction Manager bean -->
<!--     <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"> -->
<!--         <property name="entityManagerFactory" ref="entityManagerFactory"/> -->
<!--     </bean> -->

<!--     Enabling JPA repositories -->
<!--     <jpa:repositories base-package="com.springMVCMaven.DAO"/> -->
<!-- <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/> -->
   </beans>                        